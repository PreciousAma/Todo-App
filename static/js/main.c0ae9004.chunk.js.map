{"version":3,"sources":["Button.js","Todos.js","TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Button","buttonAction","buttonText","rest","onClick","Todos","todoList","setTodoList","className","map","todo","title","status","payload","currentTodoList","todoIndex","findIndex","data","id","newArr","splice","handleChangeStatus","TodoForm","useState","value","setValue","onSubmit","event","preventDefault","uuidv4","type","onChange","target","name","required","todos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAQeA,EANA,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAeC,EAAU,6CACpD,OACI,gDAAQC,QAASH,GAAkBE,GAAnC,aAA0CD,MCoCnCG,EArCD,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAgBtB,OACI,qBAAKC,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SACKF,EAASG,KAAI,SAACC,GACX,OACI,qBAAkBF,UAAU,YAA5B,UACI,sBAAMA,UAAU,aAAhB,SAA8BE,EAAKC,QACnC,sBAAMH,UAAU,cAAhB,SACqB,YAAhBE,EAAKE,OACF,cAAC,EAAD,CAAQX,aAAe,kBAvB7B,SAACS,GACvB,IAAMG,EAAO,2BAAOH,GAAP,IAAaE,OAAQ,cAClCL,GAAY,SAACO,GACT,IAAMC,EAAYD,EAAgBE,WAAU,SAACC,GACzC,OAAOA,EAAKC,KAAOL,EAAQK,MAGzBC,EAAM,YAAOL,GAGnB,OAFAK,EAAOC,OAAOL,EAAW,EAAGF,GAErBM,KAa8CE,CAAmBX,IAAOR,WAAW,OAAOM,UAAU,aACnF,mBAAGA,UAAU,+BALhBE,EAAKQ,Y,gBCQvBI,EA7BE,SAAC,GAAqB,IAAnBf,EAAkB,EAAlBA,YAAkB,EACRgB,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAkBlC,OACI,qBAAKjB,UAAU,QAAf,SACI,uBAAMkB,SAbO,SAACC,GAClBA,EAAMC,iBACN,IAAMf,EAAU,CAACK,GAAIW,cAAUlB,MAAOa,EAAOZ,OAAQ,WAErDL,GAAY,SAACO,GACT,MAAM,GAAN,mBAAWA,GAAX,CAA4BD,OAGhCY,EAAS,KAKyBjB,UAAU,aAAxC,UACI,uBAAOsB,KAAK,QAAQN,MAAOA,EAAOO,SAlBzB,SAACJ,GAClBF,EAASE,EAAMK,OAAOR,QAiB4CS,KAAK,OAAOC,UAAQ,EAAC1B,UAAU,cACzF,uBAAOsB,KAAK,SAASN,MAAM,MAAMhB,UAAU,kBCnBrD2B,EAAQ,CACZ,CAACjB,GAAIW,cAAUlB,MAAO,mBAAoBC,OAAQ,WAClD,CAACM,GAAIW,cAAUlB,MAAO,gBAAkBC,OAAQ,aAChD,CAACM,GAAIW,cAAUlB,MAAO,YAAcC,OAAQ,YAkB/BwB,MAdf,WAAgB,IAAD,EACmBb,mBAASY,GAD5B,mBACN7B,EADM,KACIC,EADJ,KAGb,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAUD,YAAaA,IACvB,cAAC,EAAD,CAAOD,SAAUA,EAAUC,YAAaA,WCTjC8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0ae9004.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({buttonAction, buttonText, ...rest}) => {\r\n    return (\r\n        <button onClick={buttonAction} {...rest}>{buttonText}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Todos = ({todoList, setTodoList}) => {\r\n\r\n   const handleChangeStatus = (todo) => {\r\n        const payload = {...todo, status: \"completed\"}\r\n        setTodoList((currentTodoList) => {\r\n            const todoIndex = currentTodoList.findIndex((data) => {\r\n                return data.id === payload.id\r\n            });\r\n            \r\n            const newArr = [...currentTodoList];\r\n            newArr.splice(todoIndex, 1, payload);\r\n\r\n            return newArr;\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <ol className=\"todo-items\">\r\n                {todoList.map((todo)=> {\r\n                    return (\r\n                        <li key={todo.id} className=\"todo-item\">\r\n                            <span className=\"todo-title\">{todo.title}</span>\r\n                            <span className=\"item-status\">\r\n                                {todo.status === 'pending' ?\r\n                                    <Button buttonAction= {() => handleChangeStatus(todo)} buttonText=\"Done\" className=\"done-btn\"/> :\r\n                                    <i className=\"fas fa-check check-btn\" />\r\n                                }\r\n                            </span>\r\n                        </li>\r\n                    );  \r\n                })}\r\n            </ol>\r\n        </div>\r\n    );\r\n}   \r\n\r\nexport default Todos;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TodoForm = ({ setTodoList }) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const payload = {id: uuidv4(), title: value, status: \"pending\"};\r\n\r\n        setTodoList((currentTodoList) => {\r\n            return [...currentTodoList, payload];\r\n        });\r\n\r\n        setValue('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"input\">\r\n            <form onSubmit={handleSubmit} className=\"input-form\">\r\n                <input type=\"input\" value={value} onChange={handleChange} name=\"todo\" required className=\"input-box\" />\r\n                <input type=\"submit\" value=\"Add\" className=\"add-btn\" />\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\nimport Todos from './Todos';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodoForm from './TodoForm';\n\nconst todos = [\n  {id: uuidv4(), title: 'visit the clinic', status: 'pending'},\n  {id: uuidv4(), title: 'get groceries',  status: 'completed'},\n  {id: uuidv4(), title: 'chop life',  status: 'pending'}\n];\n\n\nfunction App() {\n  const [todoList, setTodoList] = useState(todos); \n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Basic Todo App</h1>\n      <div className=\"todo-wrap\">\n        <TodoForm setTodoList={setTodoList} />\n        <Todos todoList={todoList} setTodoList={setTodoList} />\n      </div>\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}